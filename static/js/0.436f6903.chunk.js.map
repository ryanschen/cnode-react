{"version":3,"sources":["../node_modules/timeago.js/lib/constant.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/timeago.js/lib/index.js","../node_modules/timeago.js/lib/helper.js","../node_modules/timeago.js/lib/locales.js","../node_modules/timeago.js/lib/timer.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/timeago.js/lib/TimeAgo.js"],"names":["Object","defineProperty","exports","value","IndexMapEn","split","IndexMapZH","ATTR_DATA_TID","SEC_ARRAY","ATTR_TIMEAGO","ATTR_DATETIME","module","__webpack_require__","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","d","__webpack_exports__","_TimeAgo","_locales","_timer","factory","nowDate","locale","TimeAgo","register","cancel","default","setTidAttr","getDateAttr","getAttr","nextInterval","diffSec","formatDiff","toDate","toInt","_constant","f","parseInt","input","Date","isNaN","test","trim","replace","diff","defaultLocale","Locales","i","agoin","total_sec","Math","abs","length","date","rst","ceil","node","name","getAttribute","attr","val","setAttribute","en","number","index","unit","zh_CN","func","run","Timers","_helper","clear","tid","clearTimeout","delay","setTimeout","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","result","toString","keys","object","push","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","obj","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","TypeError","pushTryEntry","locs","iteratorMethod","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","instance","_classCallCheck","_this","innerHTML","doRender","min","nodes","len"],"mappings":"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","file":"static/js/0.436f6903.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n\nvar IndexMapEn = exports.IndexMapEn = 'second_minute_hour_day_week_month_year'.split('_');\nvar IndexMapZH = exports.IndexMapZH = '秒_分钟_小时_天_周_月_年'.split('_');\nvar ATTR_DATA_TID = exports.ATTR_DATA_TID = 'data-tid';\nvar SEC_ARRAY = exports.SEC_ARRAY = [60, 60, 24, 7, 365 / 7 / 12, 12];\nvar ATTR_TIMEAGO = exports.ATTR_TIMEAGO = 'data-timeago';\nvar ATTR_DATETIME = exports.ATTR_DATETIME = 'datetime';","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _TimeAgo = require('./TimeAgo');\n\nvar _locales = require('./locales');\n\nvar _timer = require('./timer'); // 入口函数\n\n\nvar factory = function factory(nowDate, locale) {\n  return new _TimeAgo.TimeAgo(nowDate, locale);\n};\n/**\n * 注册语言\n */\n\n/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n\n\nfactory.register = _locales.register;\n/**\n * 终止定时器\n */\n\nfactory.cancel = _timer.cancel;\nexports.default = factory;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setTidAttr = exports.getDateAttr = exports.getAttr = exports.nextInterval = exports.diffSec = exports.formatDiff = exports.toDate = exports.toInt = undefined;\n\nvar _constant = require('./constant');\n\nvar _locales = require('./locales');\n/**\n * change f into int, remove decimal. Just for code compression\n * @param f\n * @returns {number}\n */\n\n/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n\n\nvar toInt = exports.toInt = function toInt(f) {\n  return parseInt(f);\n};\n/**\n * format Date / string / timestamp to Date instance.\n * @param input\n * @returns {*}\n */\n\n\nvar toDate = exports.toDate = function toDate(input) {\n  if (input instanceof Date) return input;\n  if (!isNaN(input) || /^\\d+$/.test(input)) return new Date(toInt(input));\n  input = (input || '').trim().replace(/\\.\\d+/, '') // remove milliseconds\n  .replace(/-/, '/').replace(/-/, '/').replace(/(\\d)T(\\d)/, '$1 $2').replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\n  .replace(/([\\+\\-]\\d\\d)\\:?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n\n  return new Date(input);\n};\n/**\n * format the diff second to *** time ago, with setting locale\n * @param diff\n * @param locale\n * @param defaultLocale\n * @returns {string | void | *}\n */\n\n\nvar formatDiff = exports.formatDiff = function formatDiff(diff, locale, defaultLocale) {\n  // if locale is not exist, use defaultLocale.\n  // if defaultLocale is not exist, use build-in `en`.\n  // be sure of no error when locale is not exist.\n  locale = _locales.Locales[locale] ? locale : _locales.Locales[defaultLocale] ? defaultLocale : 'en';\n  var i = 0,\n      agoin = diff < 0 ? 1 : 0,\n      // timein or timeago\n  total_sec = diff = Math.abs(diff);\n\n  for (; diff >= _constant.SEC_ARRAY[i] && i < _constant.SEC_ARRAY.length; i++) {\n    diff /= _constant.SEC_ARRAY[i];\n  }\n\n  diff = toInt(diff);\n  i *= 2;\n  if (diff > (i === 0 ? 9 : 1)) i += 1;\n  return _locales.Locales[locale](diff, i, total_sec)[agoin].replace('%s', diff);\n};\n/**\n * calculate the diff second between date to be formatted an now date.\n * @param date\n * @param nowDate\n * @returns {number}\n */\n\n\nvar diffSec = exports.diffSec = function diffSec(date, nowDate) {\n  nowDate = nowDate ? toDate(nowDate) : new Date();\n  return (nowDate - toDate(date)) / 1000;\n};\n/**\n * nextInterval: calculate the next interval time.\n * - diff: the diff sec between now and date to be formatted.\n *\n * What's the meaning?\n * diff = 61 then return 59\n * diff = 3601 (an hour + 1 second), then return 3599\n * make the interval with high performance.\n **/\n\n\nvar nextInterval = exports.nextInterval = function nextInterval(diff) {\n  var rst = 1,\n      i = 0,\n      d = Math.abs(diff);\n\n  for (; diff >= _constant.SEC_ARRAY[i] && i < _constant.SEC_ARRAY.length; i++) {\n    diff /= _constant.SEC_ARRAY[i];\n    rst *= _constant.SEC_ARRAY[i];\n  }\n\n  d = d % rst;\n  d = d ? rst - d : rst;\n  return Math.ceil(d);\n};\n/**\n * get the node attribute, native DOM and jquery supported.\n * @param node\n * @param name\n * @returns {*}\n */\n\n\nvar getAttr = exports.getAttr = function getAttr(node, name) {\n  if (node.getAttribute) return node.getAttribute(name); // native dom\n\n  if (node.attr) return node.attr(name); // jquery dom\n};\n/**\n * get the datetime attribute, `data-timeagp` / `datetime` are supported.\n * @param node\n * @returns {*}\n */\n\n\nvar getDateAttr = exports.getDateAttr = function getDateAttr(node) {\n  return getAttr(node, _constant.ATTR_TIMEAGO) || getAttr(node, _constant.ATTR_DATETIME);\n};\n/**\n * set the node attribute, native DOM and jquery supported.\n * @param node\n * @param val\n * @returns {*}\n */\n\n\nvar setTidAttr = exports.setTidAttr = function setTidAttr(node, val) {\n  if (node.setAttribute) return node.setAttribute(_constant.ATTR_DATA_TID, val);\n  if (node.attr) return node.attr(_constant.ATTR_DATA_TID, val);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.register = exports.Locales = undefined;\n\nvar _constant = require('./constant');\n\nvar zh_CN = function zh_CN(number, index) {\n  if (index === 0) return ['刚刚', '片刻后'];\n\n  var unit = _constant.IndexMapZH[parseInt(index / 2)];\n\n  return [number + ' ' + unit + \"\\u524D\", number + ' ' + unit + \"\\u540E\"];\n};\n/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n\n\nvar en = function en(number, index) {\n  if (index === 0) return ['just now', 'right now'];\n\n  var unit = _constant.IndexMapEn[parseInt(index / 2)];\n\n  if (number > 1) unit += 's';\n  return [number + ' ' + unit + ' ago', 'in ' + number + ' ' + unit];\n};\n/**\n * 所有的语言\n * @type {{en: function(*, *), zh_CN: function(*, *)}}\n */\n\n\nvar Locales = exports.Locales = {\n  en: en,\n  zh_CN: zh_CN\n};\n/**\n * 注册语言\n * @param locale\n * @param func\n */\n\nvar register = exports.register = function register(locale, func) {\n  Locales[locale] = func;\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.run = exports.cancel = exports.Timers = undefined;\n\nvar _helper = require('./helper');\n\nvar _constant = require('./constant'); // 所有的定时器\n\n/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n\n\nvar Timers = exports.Timers = [];\n\nvar clear = function clear(tid) {\n  if (tid) {\n    clearTimeout(tid);\n    delete Timers[tid];\n  }\n};\n/**\n * 取消定时器\n * @param node\n */\n\n\nvar cancel = exports.cancel = function cancel(node) {\n  if (node) clear((0, _helper.getAttr)(node, _constant.ATTR_DATA_TID)); // get the timer of DOM node(native / jq).\n  else for (var tid in Timers) {\n      clear(tid);\n    }\n};\n/**\n * 开启一个 timer\n * @param func\n * @param delay\n */\n\n\nvar run = exports.run = function run(func, delay) {\n  var tid = setTimeout(function () {\n    // 从 Timer 中删除\n    clear(tid); // 执行目标方法\n\n    func();\n  }, delay); // there is no need to save node in object. Just save the key\n\n  Timers[tid] = 0;\n  return tid;\n};","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = function () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")(); // Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\n\nvar hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0; // Save the old regeneratorRuntime in case it needs to be restored later.\n\nvar oldRuntime = hadRuntime && g.regeneratorRuntime; // Force reevalutation of runtime.js.\n\ng.regeneratorRuntime = undefined;\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch (e) {\n    g.regeneratorRuntime = undefined;\n  }\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n!function (global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    } // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n\n\n    return;\n  } // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n\n\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  runtime.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  runtime.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  runtime.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  runtime.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  runtime.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  runtime.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n}( // In sloppy mode, unbound `this` refers to the global object, fallback to\n// Function constructor if we're in global strict mode. That is sadly a form\n// of indirect eval which violates Content Security Policy.\nfunction () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")());","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TimeAgo = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n\n\nvar _helper = require('./helper');\n\nvar _timer = require('./timer');\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar TimeAgo = exports.TimeAgo = function () {\n  function TimeAgo(nowDate, defaultLocale) {\n    _classCallCheck(this, TimeAgo);\n\n    this.nowDate = nowDate;\n    this.defaultLocale = defaultLocale || 'en';\n  }\n\n  _createClass(TimeAgo, [{\n    key: 'setLocale',\n    value: function setLocale(locale) {\n      this.defaultLocale = locale;\n    }\n    /**\n     * render 定期器渲染\n     * @param node\n     * @param date\n     * @param locale\n     */\n\n  }, {\n    key: 'doRender',\n    value: function doRender(node, date, locale) {\n      var _this = this;\n\n      var diff = (0, _helper.diffSec)(date, this.nowDate); // render\n\n      node.innerHTML = (0, _helper.formatDiff)(diff, locale, this.defaultLocale); // waiting %s seconds, do the next render\n\n      var tid = (0, _timer.run)(function () {\n        _this.doRender(node, date, locale);\n      }, Math.min((0, _helper.nextInterval)(diff) * 1000, 0x7FFFFFFF)); // set attribute date-tid\n\n      (0, _helper.setTidAttr)(node, tid);\n    }\n    /**\n     * render: render the DOM real-time.\n     * - nodes: which nodes will be rendered.\n     * - locale: the locale name used to format date.\n     *\n     * How to use it?\n     * var timeago = require('timeago.js')();\n     * // 1. javascript selector\n     * timeago.render(document.querySelectorAll('.need_to_be_rendered'));\n     * // 2. use jQuery selector\n     * timeago.render($('.need_to_be_rendered'), 'pl');\n     *\n     * Notice: please be sure the dom has attribute `datetime`.\n     */\n\n  }, {\n    key: 'render',\n    value: function render(nodes, locale) {\n      // by .length\n      if (nodes.length === undefined) nodes = [nodes];\n      var node = void 0;\n\n      for (var i = 0, len = nodes.length; i < len; i++) {\n        node = nodes[i]; // clear node's timer\n\n        (0, _timer.cancel)(node);\n        this.doRender(node, (0, _helper.getDateAttr)(node), locale); // render item\n      }\n    }\n    /**\n     * format: format the date to *** time ago, with setting or default locale\n     * - date: the date / string / timestamp to be formatted\n     * - locale: the formatted string's locale name, e.g. en / zh_CN\n     *\n     * How to use it?\n     * var timeago = require('timeago.js')();\n     * timeago.format(new Date(), 'pl'); // Date instance\n     * timeago.format('2016-09-10', 'fr'); // formated date string\n     * timeago.format(1473473400269); // timestamp with ms\n     */\n\n  }, {\n    key: 'format',\n    value: function format(date, locale) {\n      return (0, _helper.formatDiff)((0, _helper.diffSec)(date, this.nowDate), locale, this.defaultLocale);\n    }\n  }]);\n\n  return TimeAgo;\n}();"],"sourceRoot":""}